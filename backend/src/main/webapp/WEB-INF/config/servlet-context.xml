<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:component-scan base-package="lk.ucsc.projects.explore.controller" />
	<context:annotation-config />

	<mvc:resources location="/resources/" mapping="/resources/**" />

	<!-- Validation Configuration: make the spring validation works and also 
		define the resource files -->
	<mvc:annotation-driven validator="validator"
		conversion-service="conversionService" />
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="classpath:validation,classpath:messages" />
	</bean>
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- End Validation Configuration -->

	<!-- Conversion Service Configuration: make spring framework use our customer 
		Formatter -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
			<set>
				<bean class="lk.ucsc.projects.explore.formatter.AppointmentStatusFormatter" />
				<bean class="lk.ucsc.projects.explore.formatter.GenderFormatter" />
				<bean class="lk.ucsc.projects.explore.formatter.InvoiceStatusFormatter" />
				<bean class="lk.ucsc.projects.explore.formatter.SpecializationFormatter" />
				<bean class="lk.ucsc.projects.explore.formatter.AuthorityRoleFormatter" />
			</set>
		</property>
	</bean>

	<!-- Interceptor Configuration -->
	<!--
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="mum.waa.fd.app.interceptor.RoleInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	 -->

	<!-- View Resolver Configuration: make view resolver to determine the view 
		folder and extension -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<property name="order" value="-2" />
	</bean>
	<!-- End View Resolver Configuration -->

	<!-- Internationalization Configuration: make our web site able to switch 
		the language during runtime -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="en_US" />
	</bean>
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="language" />
		</bean>
	</mvc:interceptors>
	<!-- End Internationalization Configuration -->

	<!-- Uploading File Configuration: make the form tag able to handle the 
		file uploading mechanism -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="102400" />
	</bean>
	<!-- End Uploading File Configuration -->

	<!-- Tiles Configuration: tiles -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/definitions/tile-definition.xml</value>
			</list>
		</property>
	</bean>
	<!-- End Tiles Configuration -->
</beans> 